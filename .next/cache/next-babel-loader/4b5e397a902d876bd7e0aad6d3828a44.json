{"ast":null,"code":"var _jsxFileName = \"/Users/andrew/Projects/findsee/pages/[show].js\";\nvar __jsx = React.createElement;\nimport React, { useContext, useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { ShowContext } from '../src/context/ShowContext';\nimport Layout from '../src/components/Layout';\n\nconst Show = () => {\n  const router = useRouter();\n  const {\n    0: show,\n    1: setShow\n  } = useState({});\n  useEffect(() => {\n    const getShow = async () => {\n      const showId = await router.query.show;\n      const res = await fetch(`https://api.tvmaze.com/shows/${router.query.show}`);\n      const data = await res.json();\n      setShow(data);\n      console.log(data);\n      return data;\n    };\n\n    getShow();\n  }, [router]);\n  const isImage = show.image ? show.image.medium : 'https://static.tvmaze.com/images/no-img/no-img-portrait-text.png';\n  const isSchedule = show.schedule ? show.schedule.time : 'N/A';\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, show.name), __jsx(\"img\", {\n    src: isImage,\n    alt: show.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), __jsx(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Air Date: \", show.premiered), __jsx(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Status: \", show.status), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, __jsx(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Schedule:\"), __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Time: \", isSchedule), __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Days: \")));\n};\n\nexport default Show;","map":{"version":3,"sources":["/Users/andrew/Projects/findsee/pages/[show].js"],"names":["React","useContext","useState","useEffect","useRouter","ShowContext","Layout","Show","router","show","setShow","getShow","showId","query","res","fetch","data","json","console","log","isImage","image","medium","isSchedule","schedule","time","name","premiered","status"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAClB,QAAMC,MAAM,GAAGJ,SAAS,EAAxB;AACA,QAAM;AAAA,OAACK,IAAD;AAAA,OAAOC;AAAP,MAAkBR,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMQ,OAAO,GAAG,YAAY;AAC3B,YAAMC,MAAM,GAAG,MAAMJ,MAAM,CAACK,KAAP,CAAaJ,IAAlC;AACA,YAAMK,GAAG,GAAG,MAAMC,KAAK,CACrB,gCAA+BP,MAAM,CAACK,KAAP,CAAaJ,IAAK,EAD5B,CAAvB;AAGA,YAAMO,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAP,MAAAA,OAAO,CAACM,IAAD,CAAP;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,aAAOA,IAAP;AACA,KATD;;AAUAL,IAAAA,OAAO;AACP,GAZQ,EAYN,CAACH,MAAD,CAZM,CAAT;AAaA,QAAMY,OAAO,GAAGX,IAAI,CAACY,KAAL,GACbZ,IAAI,CAACY,KAAL,CAAWC,MADE,GAEb,kEAFH;AAGA,QAAMC,UAAU,GAAGd,IAAI,CAACe,QAAL,GAAgBf,IAAI,CAACe,QAAL,CAAcC,IAA9B,GAAqC,KAAxD;AAEA,SACC,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKhB,IAAI,CAACiB,IAAV,CADD,EAEC;AAAK,IAAA,GAAG,EAAEN,OAAV;AAAmB,IAAA,GAAG,EAAEX,IAAI,CAACiB,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAejB,IAAI,CAACkB,SAApB,CAHD,EAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAalB,IAAI,CAACmB,MAAlB,CAJD,EAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWL,UAAX,CAFD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHD,CALD,CADD;AAaA,CAnCD;;AAqCA,eAAehB,IAAf","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { ShowContext } from '../src/context/ShowContext';\nimport Layout from '../src/components/Layout';\n\nconst Show = () => {\n\tconst router = useRouter();\n\tconst [show, setShow] = useState({});\n\n\tuseEffect(() => {\n\t\tconst getShow = async () => {\n\t\t\tconst showId = await router.query.show;\n\t\t\tconst res = await fetch(\n\t\t\t\t`https://api.tvmaze.com/shows/${router.query.show}`\n\t\t\t);\n\t\t\tconst data = await res.json();\n\t\t\tsetShow(data);\n\t\t\tconsole.log(data);\n\t\t\treturn data;\n\t\t};\n\t\tgetShow();\n\t}, [router]);\n\tconst isImage = show.image\n\t\t? show.image.medium\n\t\t: 'https://static.tvmaze.com/images/no-img/no-img-portrait-text.png';\n\tconst isSchedule = show.schedule ? show.schedule.time : 'N/A';\n\t\n\treturn (\n\t\t<Layout>\n\t\t\t<h1>{show.name}</h1>\n\t\t\t<img src={isImage} alt={show.name} />\n\t\t\t<h5>Air Date: {show.premiered}</h5>\n\t\t\t<h5>Status: {show.status}</h5>\n\t\t\t<ul>\n\t\t\t\t<h5>Schedule:</h5>\n\t\t\t\t<li>Time: {isSchedule}</li>\n\t\t\t\t<li>Days: {}</li>\n\t\t\t</ul>\n\t\t</Layout>\n\t);\n};\n\nexport default Show;\n"]},"metadata":{},"sourceType":"module"}