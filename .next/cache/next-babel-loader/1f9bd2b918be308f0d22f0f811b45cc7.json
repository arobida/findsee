{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/andrew/Projects/findsee/pages/[show].js\";\nvar __jsx = React.createElement;\nimport React, { useContext, useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { ShowContext } from '../src/context/ShowContext';\nimport Layout from '../src/components/Layout';\n\nvar Show = function Show() {\n  var router = useRouter();\n\n  var _useState = useState({}),\n      show = _useState[0],\n      setShow = _useState[1];\n\n  useEffect(function () {\n    var getShow =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var showId, res, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return router.query.show;\n\n              case 2:\n                showId = _context.sent;\n                _context.next = 5;\n                return fetch(\"https://api.tvmaze.com/shows/\".concat(router.query.show));\n\n              case 5:\n                res = _context.sent;\n                _context.next = 8;\n                return res.json();\n\n              case 8:\n                data = _context.sent;\n                setShow(data);\n                console.log(data);\n                return _context.abrupt(\"return\", data);\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function getShow() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    getShow();\n  }, [router]);\n  var isImage = show.image ? show.image.medium : 'https://static.tvmaze.com/images/no-img/no-img-portrait-text.png';\n  var isSchedule = show.schedule;\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, show.name), __jsx(\"img\", {\n    src: isImage,\n    alt: show.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), __jsx(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Air Date: \", show.premiered), __jsx(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Status: \", show.status), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, __jsx(\"h5\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Schedule:\"), __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"Time: \", show.schedule.time), __jsx(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })));\n};\n\nexport default Show;","map":{"version":3,"sources":["/Users/andrew/Projects/findsee/pages/[show].js"],"names":["React","useContext","useState","useEffect","useRouter","ShowContext","Layout","Show","router","show","setShow","getShow","query","showId","fetch","res","json","data","console","log","isImage","image","medium","isSchedule","schedule","name","premiered","status","time"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAClB,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;;AADkB,kBAEMF,QAAQ,CAAC,EAAD,CAFd;AAAA,MAEXO,IAFW;AAAA,MAELC,OAFK;;AAIlBP,EAAAA,SAAS,CAAC,YAAM;AACf,QAAMQ,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACMH,MAAM,CAACI,KAAP,CAAaH,IADnB;;AAAA;AACTI,gBAAAA,MADS;AAAA;AAAA,uBAEGC,KAAK,wCACUN,MAAM,CAACI,KAAP,CAAaH,IADvB,EAFR;;AAAA;AAETM,gBAAAA,GAFS;AAAA;AAAA,uBAKIA,GAAG,CAACC,IAAJ,EALJ;;AAAA;AAKTC,gBAAAA,IALS;AAMfP,gBAAAA,OAAO,CAACO,IAAD,CAAP;AACAC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAPe,iDAQRA,IARQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAPN,OAAO;AAAA;AAAA;AAAA,OAAb;;AAUAA,IAAAA,OAAO;AACP,GAZQ,EAYN,CAACH,MAAD,CAZM,CAAT;AAaA,MAAMY,OAAO,GAAGX,IAAI,CAACY,KAAL,GACbZ,IAAI,CAACY,KAAL,CAAWC,MADE,GAEb,kEAFH;AAGC,MAAMC,UAAU,GAAGd,IAAI,CAACe,QAAxB;AACD,SACC,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKf,IAAI,CAACgB,IAAV,CADD,EAEC;AAAK,IAAA,GAAG,EAAEL,OAAV;AAAmB,IAAA,GAAG,EAAEX,IAAI,CAACgB,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAehB,IAAI,CAACiB,SAApB,CAHD,EAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAajB,IAAI,CAACkB,MAAlB,CAJD,EAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWlB,IAAI,CAACe,QAAL,CAAcI,IAAzB,CAFD,EAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHD,CALD,CADD;AAaA,CAlCD;;AAoCA,eAAerB,IAAf","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { ShowContext } from '../src/context/ShowContext';\nimport Layout from '../src/components/Layout';\n\nconst Show = () => {\n\tconst router = useRouter();\n\tconst [show, setShow] = useState({});\n\n\tuseEffect(() => {\n\t\tconst getShow = async () => {\n\t\t\tconst showId = await router.query.show;\n\t\t\tconst res = await fetch(\n\t\t\t\t`https://api.tvmaze.com/shows/${router.query.show}`\n\t\t\t);\n\t\t\tconst data = await res.json();\n\t\t\tsetShow(data);\n\t\t\tconsole.log(data);\n\t\t\treturn data;\n\t\t};\n\t\tgetShow();\n\t}, [router]);\n\tconst isImage = show.image\n\t\t? show.image.medium\n\t\t: 'https://static.tvmaze.com/images/no-img/no-img-portrait-text.png';\n\t\tconst isSchedule = show.schedule\n\treturn (\n\t\t<Layout>\n\t\t\t<h1>{show.name}</h1>\n\t\t\t<img src={isImage} alt={show.name} />\n\t\t\t<h5>Air Date: {show.premiered}</h5>\n\t\t\t<h5>Status: {show.status}</h5>\n\t\t\t<ul>\n\t\t\t\t<h5>Schedule:</h5>\n\t\t\t\t<li>Time: {show.schedule.time}</li>\n\t\t\t\t<li></li>\n\t\t\t</ul>\n\t\t</Layout>\n\t);\n};\n\nexport default Show;\n"]},"metadata":{},"sourceType":"module"}