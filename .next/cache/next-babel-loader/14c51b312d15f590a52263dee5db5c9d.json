{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/andrew/Projects/findsee/src/context/ShowContext.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { createContext, useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nvar defaultValues = {\n  shows: [],\n  getShows: function getShows() {}\n};\nexport var ShowContext = createContext(defaultValues);\nexport var ShowProvider = function ShowProvider(_ref) {\n  var children = _ref.children;\n  var router = useRouter();\n\n  var _useState = useState([]),\n      shows = _useState[0],\n      setShows = _useState[1];\n\n  var _useState2 = useState(''),\n      query = _useState2[0],\n      setQuery = _useState2[1];\n\n  var _useState3 = useState(''),\n      showId = _useState3[0],\n      setId = _useState3[1];\n\n  useEffect(function () {\n    var getShows =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var res, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"https://api.tvmaze.com/search/shows?q=\".concat(query));\n\n              case 2:\n                res = _context.sent;\n                _context.next = 5;\n                return res.json();\n\n              case 5:\n                data = _context.sent;\n                //console.log(data);\n                setShows(data);\n                console.log(shows);\n                return _context.abrupt(\"return\", data);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function getShows() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    return function () {\n      cleanup;\n    };\n  }, [input]);\n\n  var getQuery = function getQuery(val) {\n    setQuery(val);\n  };\n\n  var getId = function getId(id) {\n    setId(id);\n    return showId;\n  };\n\n  return __jsx(ShowContext.Provider, {\n    value: _objectSpread({}, defaultValues, {\n      shows: shows,\n      getShows: getShows,\n      query: query,\n      getQuery: getQuery,\n      showId: showId,\n      getId: getId\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, children);\n};","map":{"version":3,"sources":["/Users/andrew/Projects/findsee/src/context/ShowContext.js"],"names":["React","createContext","useState","useEffect","useRouter","defaultValues","shows","getShows","ShowContext","ShowProvider","children","router","setShows","query","setQuery","showId","setId","fetch","res","json","data","console","log","cleanup","input","getQuery","val","getId","id"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,IAAMC,aAAa,GAAG;AACrBC,EAAAA,KAAK,EAAE,EADc;AAErBC,EAAAA,QAAQ,EAAE,oBAAM,CAAE;AAFG,CAAtB;AAKA,OAAO,IAAMC,WAAW,GAAGP,aAAa,CAACI,aAAD,CAAjC;AACP,OAAO,IAAMI,YAAY,GAAG,SAAfA,YAAe,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAC7C,MAAMC,MAAM,GAAGP,SAAS,EAAxB;;AAD6C,kBAEnBF,QAAQ,CAAC,EAAD,CAFW;AAAA,MAEtCI,KAFsC;AAAA,MAE/BM,QAF+B;;AAAA,mBAGnBV,QAAQ,CAAC,EAAD,CAHW;AAAA,MAGtCW,KAHsC;AAAA,MAG/BC,QAH+B;;AAAA,mBAIrBZ,QAAQ,CAAC,EAAD,CAJa;AAAA,MAItCa,MAJsC;AAAA,MAI9BC,KAJ8B;;AAM7Cb,EAAAA,SAAS,CAAC,YAAM;AACf,QAAMI,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACCU,KAAK,iDAA0CJ,KAA1C,EADN;;AAAA;AACXK,gBAAAA,GADW;AAAA;AAAA,uBAEEA,GAAG,CAACC,IAAJ,EAFF;;AAAA;AAEXC,gBAAAA,IAFW;AAGjB;AACAR,gBAAAA,QAAQ,CAACQ,IAAD,CAAR;AACAC,gBAAAA,OAAO,CAACC,GAAR,CAAYhB,KAAZ;AALiB,iDAMVc,IANU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAARb,QAAQ;AAAA;AAAA;AAAA,OAAd;;AAQA,WAAO,YAAM;AACZgB,MAAAA,OAAO;AACP,KAFD;AAGA,GAZQ,EAYN,CAACC,KAAD,CAZM,CAAT;;AAeA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,GAAG,EAAI;AACvBZ,IAAAA,QAAQ,CAACY,GAAD,CAAR;AACA,GAFD;;AAIA,MAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,EAAE,EAAI;AACnBZ,IAAAA,KAAK,CAACY,EAAD,CAAL;AACA,WAAOb,MAAP;AACA,GAHD;;AAKA,SACC,MAAC,WAAD,CAAa,QAAb;AACC,IAAA,KAAK,oBACDV,aADC;AAEJC,MAAAA,KAAK,EAALA,KAFI;AAGJC,MAAAA,QAAQ,EAARA,QAHI;AAIJM,MAAAA,KAAK,EAALA,KAJI;AAKJY,MAAAA,QAAQ,EAARA,QALI;AAMJV,MAAAA,MAAM,EAANA,MANI;AAOJY,MAAAA,KAAK,EAALA;AAPI,MADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWEjB,QAXF,CADD;AAeA,CA7CM","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\n\nconst defaultValues = {\n\tshows: [],\n\tgetShows: () => {}\n};\n\nexport const ShowContext = createContext(defaultValues);\nexport const ShowProvider = ({ children }) => {\n\tconst router = useRouter();\n\tconst [shows, setShows] = useState([]);\n\tconst [query, setQuery] = useState('');\n\tconst [showId, setId] = useState('');\n\n\tuseEffect(() => {\n\t\tconst getShows = async () => {\n\t\tconst res = await fetch(`https://api.tvmaze.com/search/shows?q=${query}`);\n\t\tconst data = await res.json();\n\t\t//console.log(data);\n\t\tsetShows(data);\n\t\tconsole.log(shows);\n\t\treturn data;\n\t};\n\t\treturn () => {\n\t\t\tcleanup\n\t\t};\n\t}, [input])\n\n\n\tconst getQuery = val => {\n\t\tsetQuery(val);\n\t};\n\n\tconst getId = id => {\n\t\tsetId(id);\n\t\treturn showId\n\t};\n\n\treturn (\n\t\t<ShowContext.Provider\n\t\t\tvalue={{\n\t\t\t\t...defaultValues,\n\t\t\t\tshows,\n\t\t\t\tgetShows,\n\t\t\t\tquery,\n\t\t\t\tgetQuery,\n\t\t\t\tshowId,\n\t\t\t\tgetId\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</ShowContext.Provider>\n\t);\n};\n"]},"metadata":{},"sourceType":"module"}