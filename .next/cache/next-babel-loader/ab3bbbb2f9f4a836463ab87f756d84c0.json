{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/andrew/Projects/findsee/src/routes/Show.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\n\nvar Show = function Show(_ref) {\n  var showId = _ref.showId,\n      location = _ref.location,\n      match = _ref.match,\n      history = _ref.history;\n\n  var _useState = useState([]),\n      show = _useState[0],\n      setShow = _useState[1];\n\n  console.log(\"show\");\n\n  var getData =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var res, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"https://api.tvmaze.com/shows/\".concat(match.params.id));\n\n            case 2:\n              res = _context.sent;\n              _context.next = 5;\n              return res.json();\n\n            case 5:\n              data = _context.sent;\n              _context.next = 8;\n              return console.log(data);\n\n            case 8:\n              setShow(data);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    className: \"showTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"hey\")));\n};\n\nvar strip = function strip(html) {\n  var temporalDivElement = document.createElement('div');\n  temporalDivElement.innerHTML = html;\n  return temporalDivElement.textContent || temporalDivElement.innerText || '';\n};\n\nexport default Show;","map":{"version":3,"sources":["/Users/andrew/Projects/findsee/src/routes/Show.js"],"names":["React","useState","Show","showId","location","match","history","show","setShow","console","log","getData","fetch","params","id","res","json","data","strip","html","temporalDivElement","document","createElement","innerHTML","textContent","innerText"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAA0C;AAAA,MAAvCC,MAAuC,QAAvCA,MAAuC;AAAA,MAA/BC,QAA+B,QAA/BA,QAA+B;AAAA,MAArBC,KAAqB,QAArBA,KAAqB;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAAA,kBAC9BL,QAAQ,CAAC,EAAD,CADsB;AAAA,MAC/CM,IAD+C;AAAA,MACzCC,OADyC;;AAGvDC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;;AACC,MAAMC,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACGC,KAAK,wCAAiCP,KAAK,CAACQ,MAAN,CAAaC,EAA9C,EADR;;AAAA;AACTC,cAAAA,GADS;AAAA;AAAA,qBAEIA,GAAG,CAACC,IAAJ,EAFJ;;AAAA;AAETC,cAAAA,IAFS;AAAA;AAAA,qBAGTR,OAAO,CAACC,GAAR,CAAYO,IAAZ,CAHS;;AAAA;AAIfT,cAAAA,OAAO,CAACS,IAAD,CAAP;;AAJe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAPN,OAAO;AAAA;AAAA;AAAA,KAAb;;AAQA,SACC;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADD,CADD,CADD;AAOA,CAnBD;;AAqBA,IAAMO,KAAK,GAAG,SAARA,KAAQ,CAAAC,IAAI,EAAI;AACrB,MAAIC,kBAAkB,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAzB;AACAF,EAAAA,kBAAkB,CAACG,SAAnB,GAA+BJ,IAA/B;AACA,SAAOC,kBAAkB,CAACI,WAAnB,IAAkCJ,kBAAkB,CAACK,SAArD,IAAkE,EAAzE;AACA,CAJD;;AAMA,eAAevB,IAAf","sourcesContent":["import React, { useState } from 'react';\n\nconst Show = ({ showId, location, match, history }) => {\n\tconst [show, setShow] = useState([]);\n\nconsole.log(\"show\")\n\tconst getData = async () => {\n\t\tconst res = await fetch(`https://api.tvmaze.com/shows/${match.params.id}`);\n\t\tconst data = await res.json();\n\t\tawait console.log(data);\n\t\tsetShow(data);\n\t};\n\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<div>\n\t\t\t\t<h1 className=\"showTitle\">hey</h1>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nconst strip = html => {\n\tvar temporalDivElement = document.createElement('div');\n\ttemporalDivElement.innerHTML = html;\n\treturn temporalDivElement.textContent || temporalDivElement.innerText || '';\n};\n\nexport default Show;\n"]},"metadata":{},"sourceType":"module"}